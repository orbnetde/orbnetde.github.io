---
import { Image } from 'astro:assets';

import { Icon } from 'astro-icon/components';

import logo from '../../assets/logo/logo.svg';
import logoWhite from '../../assets/logo/logo-white.svg';

import { type MenuItem, menuItems } from '../../content/menuItems';

import MobileNavigation from './MobileNavigation.astro';
import ThemeSwitch from './ThemeSwitch.astro';
---
<header
  x-data="{mobOpen: false, megaOpen: false}"
  class={'absolute top-0 w-full isolate z-50' + (!Astro.url.pathname.startsWith('/blog/') ? ' bg-primary text-white main-page dark:bg-dark-3' : ' bg-white text-dark dark:bg-dark dark:text-white')}
  @click.away="megaOpen = false"
  :class="megaOpen && 'open-menu'"
>
  <nav class="mx-auto flex max-w-screen-xl items-center justify-between p-6" aria-label="Global">
    <div class="flex lg:flex-1">
      <a href="/" class="-m-1.5 p-1.5">
        <span class="sr-only">orbnet</span>
        <Image class="h-8 w-auto header-logo inline-block dark:hidden"
               src={logo}
               alt="orbnet logo"
               width="125"
               height="32"
               loading="eager"
        />
        <Image class="h-8 w-auto header-logo-dark hidden dark:inline-block"
               src={logoWhite}
               alt="orbnet logo"
               width="125"
               height="32"
               loading="eager"
        />
      </a>
    </div>
    <div class="flex lg:hidden">
      <button type="button"
              @click="mobOpen = true"
              class="-m-2.5 inline-flex items-center justify-center rounded-md p-2.5"
      >
        <span class="sr-only">Menü öffnen</span>
        <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
          <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
        </svg>
      </button>
    </div>
    <div class="hidden lg:flex lg:gap-x-12 lg:items-center">
      {menuItems.map((men: MenuItem) => {
        if (!men.children || men.children.length === 0) {
          return (
            <a href={men.href}
               class="menu-btn leading-6"
            >
              {men.name}
            </a>
          );
        }
        return (
          <div
            x-data="{open: false}"
            @click.away="open = false"
          >
            <button type="button"
                    class="menu-btn flex items-center gap-x-1 leading-6 outline-none submenu-item"
                    @click="open = !open; megaOpen = open"
                    aria-expanded="false"
            >
              {men.name}
              <svg class="h-5 w-5 flex-none text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                <path fill-rule="evenodd" d="M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z" clip-rule="evenodd" />
              </svg>
            </button>
            <div x-show="open"
                 x-transition:enter="transition ease-out duration-200 text-dark"
                 x-transition:enter-start="opacity-0 -translate-y-1"
                 x-transition:enter-end="opacity-100 translate-y-0"
                 x-transition:leave="transition ease-in duration-150"
                 x-transition:leave-start="opacity-100 translate-y-0"
                 x-transition:leave-end="opacity-0 -translate-y-1"
                 class="submenu absolute inset-x-0 top-0 -z-10 bg-white dark:bg-dark pt-14 shadow-lg ring-1 ring-gray-900/5"
                 style="display: none"
            >
              <div class="mx-auto grid max-w-screen-xl grid-cols-3 gap-x-4 px-6 py-8">
                {men.children && men.children.map((item: MenuItem) => (
                  <div class="relative text-sm rounded-lg p-6 hover:bg-gray-50 dark:hover:bg-dark-2">
                    {item.children && item.children.length > 0 ?
                      <strong class="text-dark dark:text-white font-semibold">{item.name}</strong>
                      :
                      <>
                      <a href={item.href} class="text-dark dark:text-white dark:hover:text-primary-300 font-semibold">
                        {item.name}
                        <span class="absolute inset-0"></span>
                      </a>
                      <p class="mt-1 text-gray-600 dark:text-gray-300">{item.description}</p>
                      </>
                    }
                    {item.children && item.children.length > 0 &&
                      <hr class="my-3" />}
                    {item.children && item.children.length > 0 && item.children.map((subItem: MenuItem) => (
                      <div class="relative flex flew-col flex-wrap mb-2">
                        <div class="group flex flex-row items-center gap-2">
                          <Icon name={subItem.icon}
                                class="h-6 w-6 text-primary dark:text-white group-hover:text-primary dark:group-hover:text-primary-300"
                                width={24}
                                height={24}
                                aria-hidden="true"
                          />
                          <a href={subItem.href} class="leading-7 text-dark dark:text-white group-hover:text-primary dark:group-hover:text-primary-300">{subItem.name}</a>
                        </div>
                      </div>
                    ))}
                  </div>
                ))}
              </div>
              <div class="bg-gray-50 dark:bg-dark-3">
                <div class="mx-auto max-w-7xl px-6 lg:px-8">
                  <div class="grid grid-cols-3 divide-x divide-gray-900/5 border-x border-gray-900/5">
                    {men.actions && men.actions.map((action: MenuItem) => (
                      <a href={action.href}
                         class=`group flex items-center justify-center gap-x-2.5 p-3 text-sm leading-6 text-gray-900 ${action?.highlight ? 'bg-primary text-white hover:bg-primary hover:text-white' : ''} dark:text-white hover:bg-gray-100 dark:hover:bg-gray-600`
                         { ...(action?.external && {target: '_blank'})}
                         { ...(action?.robots && {rel: action.robots})}
                      >
                        {action.icon &&
                          <Icon name={action.icon}
                                class=`h-5 w-5 flex-none text-dark dark:text-white ${action?.highlight ? 'text-white group-hover:text-white' : ''} group-hover:text-primary dark:group-hover:text-white`
                                width={20}
                                height={20}
                                aria-hidden="true"
                          />
                        }
                        {action.name}
                      </a>
                    ))}
                  </div>
                </div>
              </div>
            </div>
          </div>
        );
      })}
    </div>
    <div class="hidden lg:flex lg:flex-1 lg:justify-end lg:gap-x-6 lg:items-center">
      <ThemeSwitch />
      <a href="https://my.orbnet.de/account/login/"
         class="menu-btn leading-6"
      >
        Log In
      </a>
      <a href="https://my.orbnet.de/account/register/"
         class="menu-btn menu-btn-test leading-6 text-white bg-primary px-4 py-2 rounded-lg font-wide font-semibold"
      >
        Jetzt testen
      </a>
    </div>
  </nav>
  <MobileNavigation menuItems={menuItems} />
  <div id="reading-indicator" class="bg-gradient-to-l from-primary h-1 max-w-full" style="width: 0"></div>
</header>
