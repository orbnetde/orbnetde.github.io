---
import { Picture } from 'astro:assets';

import { storyblokEditable, type SbBlokData } from '@storyblok/astro';
import StoryblokComponent from '@storyblok/astro/StoryblokComponent.astro';

interface ImageHeroImage extends SbBlokData {
  filename: string;
}

interface ImageHero extends SbBlokData {
  title: string,
  subtitle: string,
  cta_link: string,
  cta_text: string,
  content: SbBlokData[],
  image: ImageHeroImage,
  image_classes?: string
}

interface Props {
  blok: ImageHero;
}

const { blok } = Astro.props;
---
<section id="start" class="relative w-full bg-gradient-to-t from-primary-900 from-10% to-80% bg-primary dark:from-dark dark:bg-dark-3 pt-24 lg:pt-8 hero-bg" {...storyblokEditable(blok)}>
  <div class=`flex ${blok?.image?.filename && 'flex-col-reverse md:flex-row min-h-[280px] lg:min-h-[400px] xl:min-h-[500px]'} min-h-[100dvh] lg:h-[100dvh] w-full pb-[50px] px-6 text-white max-w-screen-xl lg:items-center mx-auto gap-8`>
    <div>
      <h1 class="text-2xl md:text-3xl lg:text-5xl lg:leading-tight font-semibold text-white" {...storyblokEditable(blok)}>
        {blok.title}
      </h1>

      {blok.subtitle &&
        <h2 class="lg:text-xl py-6 lg:py-9 text-white" {...storyblokEditable(blok)}>
          {blok.subtitle}
        </h2>
      }

      <div class="lg:text-xl pb-6 lg:pb-9 text-white">
        {blok.content?.map((blok: SbBlokData) => (
          <StoryblokComponent blok={blok} />
        ))}
      </div>

      {blok.cta_link && blok.cta_text &&
        <a
          href={blok.cta_link}
          class="block w-full tracking-wide text-lg font-semibold text-dark items-center bg-white hover:bg-white/[0.95] dark:bg-primary dark:text-white justify-center px-7 py-3 lg:py-4 rounded-lg shadow-md text-center transition duration-500 hover:shadow-xl"
          {...storyblokEditable(blok)}
        >
          {blok.cta_text}
        </a>
      }
    </div>
    {blok?.image?.filename &&
      <Picture
        loading="eager"
        src={blok.image.filename}
        widths={[500, 400, 280]}
        inferSize={true}
        alt="orbnet dashboard"
        format="webp"
        quality="high"
        pictureAttributes={{ class: `motion-safe:animate-rising min-w-[280px] max-w-[280px] lg:min-w-[400px] lg:max-w-[400px] xl:min-w-[500px] xl:max-w-[500px] self-center ${blok.image_classes || ''}` }}
      />
    }
  </div>
</section>
