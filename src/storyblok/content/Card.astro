---
import { storyblokEditable, type ISbRichtext, type SbBlokData, type SbRichTextOptions } from '@storyblok/astro';
import RichTextRenderer from '@storyblok/astro/RichTextRenderer.astro';
import BlogSchema from '../../content/blog/Schema';
import SmartImage from '../../components/SmartImage.astro';

interface SbImage extends SbBlokData {
  filename: string;
}

interface Card extends SbBlokData {
  title: string,
  body: any | ISbRichtext,
  link?: string,
  image?: SbImage,
  image_full_size?: boolean,
  classes?: string
  titleClasses?: string
  bodyClasses?: string,
  withoutOpacity?: boolean,
}

interface Props {
  blok: Card;
}

const options: SbRichTextOptions = {
  schema: BlogSchema,
};

const { blok } = Astro.props;
---
<div class={'relative group transition border border-black/[0.05] dark:border-black rounded-lg ' + (blok?.classes || '')} {...storyblokEditable(blok)}>
  <div class=`card-over ${blok?.withoutOpacity && 'card-full'}`></div>
  <div class="relative top-0 left-0 flex flex-col rounded-t-lg overflow-hidden">
    {blok?.image && blok.image?.filename !== '' &&
      <SmartImage src={blok.image.filename}
                  alt={blok?.title || 'Bild'}
                  widths={[600, 420, 330]}
                  sizes="(max-width: 400px) 330px, (max-width: 1024px) 420px, 600px"
                  pictureAttributes={{ class: 'flex h-64 w-full' }}
                  class=`${blok?.image_full_size ? 'rounded-t-lg object-cover' : 'object-cover object-center'} transition duration-500 group-hover:scale-105`
      />
    }
    <div class="py-4 px-8">
      {blok?.title && blok?.link && <a href={blok.link} class={'text-xl font-normal text-pretty break-words block pt-4 pb-6 text-primary dark:text-primary-400 card-link ' + blok?.titleClasses}>{blok.title}</a>}
      {blok?.title && !blok?.link && <strong class={'text-xl font-normal text-pretty break-words block pt-4 pb-6 text-primary dark:text-primary-400 ' + blok?.titleClasses}>{blok.title}</strong>}
      <div class={'text-dark-3 dark:text-white pb-6 ' + blok?.bodyClasses}>
        {blok.body &&
          (blok.body?.type ?
            <RichTextRenderer richTextData={blok.body} richTextOptions={options} /> : blok.body)
        }
      </div>
    </div>
  </div>
</div>
